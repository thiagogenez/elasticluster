---

- name: Slurm master Playbook
  hosts: slurm_master
  tasks:
    - name: Include the NIS role
      include_role:
        name: 'nis'
      vars:
        NIS_MASTER: "{{groups.slurm_master[0]}}"
      when: 'multiuser_cluster|default("true")|bool'
    - name: Create the values for the variable NFS_EXPORTS 
      vars: 
        clients: "{{groups.slurm_worker + groups.slurm_submit|default([])}}"
      set_fact:
        nsf_export: 
          path: "{{ item.server_path }}" 
          clients: "{{ clients }}"  
      loop: '{{ slurm_nfs_mountpoints | default([{"server_path": "/home", "client_mountpoint": "/home"}]) | from_yaml }}' 
      register: NFS_EXPORTS_TMP
    - name: bla
      debug:
        msg: "{{ NFS_EXPORTS_TMP.results | map(attribute='ansible_facts.nsf_export') | list }}"
    - name: Include the NFS-server role
      include_role:
        name: 'nfs-server'
      vars: 
        NFS_EXPORTS: "{{ NFS_EXPORTS_TMP.results | map(attribute='ansible_facts.nsf_export') | list | to_json }}"
    - name: Include the 'slurm-master' role
      include_role:
        name: 'slurm-master'

- name: Slurm worker nodes Playbook
  import_playbook: slurm-clients.yml
  vars:
    host: slurm_worker


- name: Slurm client nodes Playbook
  import_playbook: slurm-clients.yml
  vars:
    host: slurm_submit:slurm_client



- name: Restart SLURMd after all config is done
  hosts: slurm_worker
  tasks:
    - ansible.builtin.service:
        name: slurmd
        state: restarted
      when: 'is_debian_compatible and (is_debian_8_or_later or is_ubuntu_15_10_or_later)'
    - ansible.builtin.service:
        name: slurm-llnl
        state: restarted
      when: 'is_debian_compatible and not (is_debian_8_or_later or is_ubuntu_15_10_or_later)'
    - ansible.builtin.service:
        name: slurmd
        state: restarted
      when: is_rhel7_compatible
    - ansible.builtin.service:
        name: slurm
        state: restarted
      when: is_rhel6_compatible
