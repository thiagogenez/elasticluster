---
#
# Format and
#

- name: Does device '{{device.path}}' exists?
  stat:
    path: '{{device.path}}'
    get_attributes: no
    get_checksum: no
    get_mime: no
  register: disk_status


- name: Is the partition '{{device.path}}{{device.number}}' exists?
  stat:
    path: '{{device.path}}{{device.number}}'
    get_checksum: no
    get_attributes: no
    get_mime: no
  register: partition_status


- name: Is the volume '{{device.mountpoint}}' mounted?
  ansible.builtin.command: findmnt -rno SOURCE,TARGET '{{device.path}}{{device.number}}'
  register: mount_check


- name: Create partition {{device.path}}{{device.number}} using the `parted`` command line tool
  community.general.parted:
    device: '{{device.path}}'
    number: '{{device.number}}'
    state: present
    fs_type: '{{device.fs_type}}'
  when: 'disk_status.stat.exists and not partition_status.stat.exists and mount_check.rc == 1'


- name: Get the filesystem of the device {{device.path}}{{device.number}} 
  ansible.builtin.command: blkid '{{device.path}}{{device.number}}' -s TYPE -o value
  register: fs_type_check
  #when: 'disk_status.stat.exists and partition_status.stat.exists and not mount_check.stdout_lines[0] is defined'


- name: Format the device '{{device.path}}{{device.number}}' using '{{device.fs_type}}' filesystem 
  community.general.filesystem:
    fstype: '{{device.fs_type}}'
    force: yes
    dev: '{{device.path}}{{device.number}}'
    state: present
  when: 'partition_status.stat.exists and fs_type_check != device.fs_type and mount_check.rc == 1'


- name: Get the UUID of the device {{device.path}}{{device.number}} 
  ansible.builtin.command: blkid '{{device.path}}{{device.number}}' -s UUID -o value
  register: uuid_check
  when: 'disk_status.stat.exists and partition_status.stat.exists'


- name: Mount new volumes and create fstab entries
  ansible.posix.mount: 
    path: "{{device.mountpoint}}"
    src: "UUID={{uuid_check.stdout_lines[0]}}"
    fstype: "{{device.fs_type}}"
    opts: "{{device.opts}}"
    state: "mounted"
  when: uuid_check.stdout_lines[0] is defined

