---

- name: Version compatibility check (1)
  fail:
    msg: "Python 2 is only available in Anaconda version 2019.10 or less, but Anaconda {{ anaconda_version }} was requested.  To proceed, please set `anaconda_version` to version 2019.10 or earlier, or set `anaconda_python_version=3` and then retry."
  when: 'anaconda_python_version|int == 2 and anaconda_version.split(".")[0]|int >= 2020'

- name: Version compatibility check (2)
  fail:
    msg: "Anaconda 2019.10 has a bug and cannot be installed on machines with one vCPU only; see https://github.com/ContinuumIO/anaconda-issues/issues/11466. To proceed, please set `anaconda_version` to version 2019.07, and then retry."
  when: 'ansible_processor_vcpus|int == 2 and anaconda_version == "2019.10"'

# need to do this here, as the Anaconda packages are not yet installed
- name: Create `anaconda` system user
  user:
    name: '{{anaconda_username}}'
    system: yes
    create_home: yes

- name: Download Anaconda installer script
  get_url:
    url: '{{anaconda_installer_url}}'
    dest: '{{anaconda_installer_sh}}'
    owner: root
    group: root
    mode: 0755
    validate_certs: '{{ not insecure_https_downloads|default("no")|bool }}'

- name: Install Anaconda
  command: '{{anaconda_installer_sh}} -b -f -p {{anaconda_home}}'
  args:
    creates: '{{anaconda_home}}/bin/conda'

- name: Delete Anaconda installer script
  file:
    path: '{{anaconda_installer_sh}}'
    state: absent
  when: anaconda_cleanup

- name: make Anaconda Python the first match in $PATH
  template:
    src: 'etc/profile.d/anaconda.sh.j2'
    dest: '/etc/profile.d/anaconda{{anaconda_python_version}}.sh'
    mode: '0444'
    owner: root
    group: root
  when: anaconda_in_path

- name: Transfer `anaconda{{anaconda_python_version}}.sh` to {{groups.slurm_submit}}
  synchronize:
    mode: push
    src: '/etc/profile.d/anaconda{{anaconda_python_version}}.sh'
    dest: "{{hostvars[item].ansible_default_ipv4.address}}:/etc/profile.d/anaconda{{anaconda_python_version}}.sh"
  delegate_to: "{{ groups.slurm_master[0] }}"
  loop: "{{groups.slurm_submit }}"
  when: anaconda_centralised
  

- name: Make convenience symlink to Anaconda home
  ansible.builtin.file:
    dest: '{{item}}/anaconda{{anaconda_python_version}}'
    src: '{{anaconda_home}}'
    state: link
    owner: '{{anaconda_username}}'
    group: '{{anaconda_groupname}}'
  loop:
    - /opt
    - '{{anaconda_install_path}}'

- name: Update conda
  ansible.builtin.command: '{{anaconda_home}}/bin/conda update -y {{item}}'
  loop:
    - conda
    - anaconda
    - --all

- name: Customise system conda
  ansible.builtin.command: '{{anaconda_home}}/bin/conda config --system --set {{item.key}} {{item.value}}'
  loop: '{{ anaconda_system_config  | from_yaml | default([]) }}'
  when: 'item is defined' 

- name: Add extra channels
  ansible.builtin.command: '{{anaconda_home}}/bin/conda config --system --add channels {{item}}'
  loop: '{{anaconda_extra_channels  | from_yaml | default(["defaults"]) }}'
  when: 'item is defined'

##
## Thanks to https://medium.com/@pjptech/installing-anaconda-for-multiple-users-650b2a6666c6
## to make conda a multi-user environment
##
- name: Explicitly change the ownership of the '{{anaconda_home}}' folder, and all subfolders, from root to ‘anaconda’,
  ansible.builtin.command: chown -R '{{anaconda_username}}':'{{anaconda_username}}' '{{anaconda_home}}'

- name: Explicitly remove write permission for ‘group’ and ‘others’ — we don’t want them messing up our anaconda directory!
  ansible.builtin.command: chmod -R go-w '{{anaconda_home}}'

- name: Explicitly give ‘group’ and ‘others’ read and execute permissions
  ansible.builtin.command: chmod -R go+rX '{{anaconda_home}}'

- name: Create shared place for multi-user setup
  ansible.builtin.file:
    path: '{{anaconda_shared}}/pkgs'
    state: directory
    owner: 'root'
    group: 'root'

- name: Explicitly set the permissions to enable other users to write to at the shared place '{{anaconda_shared}}'/..
  ansible.builtin.command: chmod -R oug+rwx '{{anaconda_shared}}/..'    

  
- name: Create conda shared_env
  ansible.builtin.command: '{{anaconda_home}}/bin/conda create -n {{item.name}} -y {{item.pkgs | from_yaml |join(" ") }}'
  become: True
  become_user: '{{anaconda_username}}'
  loop: '{{anaconda_shared_env| from_yaml }}'
  when: 'item is defined'
  
